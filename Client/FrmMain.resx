<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KeOCaREAAAAASUVORK5CYII=
</value>
  </data>
</root>